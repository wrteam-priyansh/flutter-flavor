def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    namespace "com.example.flavour_demo"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {

        
        signingConfigs {
            // production {
            //     //     def keystorePropertiesFile = rootProject.file("keystore.properties")
            //     //     def keystoreProperties = new Properties()
            //     //     keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

            //     //     keyAlias keystoreProperties['keyAlias']
            //     //     keyPassword keystoreProperties['keyPassword']
            //     //     storeFile file(keystoreProperties['storeFile'])
            //     //     storePassword keystoreProperties['storePassword']
            // }

            release {
                //     def keystorePropertiesFile = rootProject.file("keystore.properties")
                //     def keystoreProperties = new Properties()
                //     keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

                //     keyAlias keystoreProperties['keyAlias']
                //     keyPassword keystoreProperties['keyPassword']
                //     storeFile file(keystoreProperties['storeFile'])
                //     storePassword keystoreProperties['storePassword']
            }
   
        }
        flavorDimensions "env"

        productFlavors {
            production {
                dimension "env"
                resValue "string", "app_name", "Flavor demo"
            }
            dev {
                dimension "env"
                resValue "string", "app_name", "Flavor DEV"
                applicationIdSuffix ".dev"
            }
            staging {
                dimension "env"
                resValue "string", "app_name", "Flavor Staging"
                applicationIdSuffix ".staging"
            }
        }



        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.flavour_demo"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 21
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug 
        }
        
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
